import{_ as t,c as o,aA as a,o as r}from"./chunks/framework.DyPz110q.js";const h=JSON.parse('{"title":"222. 完全二叉树的节点个数","description":"","frontmatter":{"title":"222. 完全二叉树的节点个数","categories":"leetcode","tags":["Bit Manipulation","Tree","Binary Search","Binary Tree"],"date":"2025-01-10T07:58:31.249Z","updated":"2025-01-10T07:58:31.249Z"},"headers":[],"relativePath":"222. 完全二叉树的节点个数.md","filePath":"222. 完全二叉树的节点个数.md"}'),s={name:"222. 完全二叉树的节点个数.md"};function n(l,e,c,p,i,d){return r(),o("div",null,e[0]||(e[0]=[a('<h2 id="题目" tabindex="-1">题目 <a class="header-anchor" href="#题目" aria-label="Permalink to &quot;题目&quot;">​</a></h2><p><a href="https://leetcode.cn/problems/count-complete-tree-nodes" target="_blank" rel="noreferrer">222. 完全二叉树的节点个数</a></p><p>给你一棵<strong>完全二叉树</strong> 的根节点 <code>root</code> ，求出该树的节点个数。</p><p><a href="https://baike.baidu.com/item/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91/7773232?fr=aladdin" target="_blank" rel="noreferrer">完全二叉树</a> 的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底层为第 <code>h</code> 层（从第 0 层开始），则该层包含 <code>1~ 2h</code> 个节点。</p><p><strong>示例 1：</strong></p><p><img src="https://assets.leetcode.com/uploads/2021/01/14/complete.jpg" alt=""></p><blockquote><p><strong>输入：</strong> root = [1,2,3,4,5,6] <strong>输出：</strong> 6</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> root = [] <strong>输出：</strong> 0</p></blockquote><p><strong>示例 3：</strong></p><blockquote><p><strong>输入：</strong> root = [1] <strong>输出：</strong> 1</p></blockquote><p><strong>提示：</strong></p><ul><li>树中节点的数目范围是<code>[0, 5 * 104]</code></li><li><code>0 &lt;= Node.val &lt;= 5 * 104</code></li><li>题目数据保证输入的树是 <strong>完全二叉树</strong></li></ul><p><strong>进阶：</strong> 遍历树来统计节点是一种时间复杂度为 <code>O(n)</code> 的简单解决方案。你可以设计一个更快的算法吗？</p><h2 id="思路" tabindex="-1">思路 <a class="header-anchor" href="#思路" aria-label="Permalink to &quot;思路&quot;">​</a></h2><h2 id="题解" tabindex="-1">题解 <a class="header-anchor" href="#题解" aria-label="Permalink to &quot;题解&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div>',17)]))}const u=t(s,[["render",n]]);export{h as __pageData,u as default};
