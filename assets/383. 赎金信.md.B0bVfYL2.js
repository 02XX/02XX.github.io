import{_ as o,c as t,aA as a,o as n}from"./chunks/framework.DyPz110q.js";const u=JSON.parse('{"title":"383. 赎金信","description":"","frontmatter":{"title":"383. 赎金信","categories":"leetcode","tags":["Hash Table","String","Counting"],"date":"2024-12-30T15:01:34.930Z","updated":"2024-12-30T15:01:34.930Z"},"headers":[],"relativePath":"383. 赎金信.md","filePath":"383. 赎金信.md"}'),r={name:"383. 赎金信.md"};function s(c,e,l,d,i,p){return n(),t("div",null,e[0]||(e[0]=[a('<h2 id="题目" tabindex="-1">题目 <a class="header-anchor" href="#题目" aria-label="Permalink to &quot;题目&quot;">​</a></h2><p><a href="https://leetcode.cn/problems/ransom-note" target="_blank" rel="noreferrer">383. 赎金信</a></p><p>给你两个字符串：<code>ransomNote</code> 和 <code>magazine</code> ，判断 <code>ransomNote</code> 能不能由 <code>magazine</code> 里面的字符构成。</p><p>如果可以，返回 <code>true</code> ；否则返回 <code>false</code> 。</p><p><code>magazine</code> 中的每个字符只能在 <code>ransomNote</code> 中使用一次。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> ransomNote = &quot;a&quot;, magazine = &quot;b&quot; <strong>输出：</strong> false</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> ransomNote = &quot;aa&quot;, magazine = &quot;ab&quot; <strong>输出：</strong> false</p></blockquote><p><strong>示例 3：</strong></p><blockquote><p><strong>输入：</strong> ransomNote = &quot;aa&quot;, magazine = &quot;aab&quot; <strong>输出：</strong> true</p></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= ransomNote.length, magazine.length &lt;= 105</code></li><li><code>ransomNote</code> 和 <code>magazine</code> 由小写英文字母组成</li></ul><h2 id="思路" tabindex="-1">思路 <a class="header-anchor" href="#思路" aria-label="Permalink to &quot;思路&quot;">​</a></h2><h2 id="题解" tabindex="-1">题解 <a class="header-anchor" href="#题解" aria-label="Permalink to &quot;题解&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div>',16)]))}const m=o(r,[["render",s]]);export{u as __pageData,m as default};
